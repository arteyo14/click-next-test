// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  points       Float
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  RefreshToken refreshToken[]
  UserRedeem   userRedeem[]
}

model products {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  image_url   String
  price       Float
  stock       Int
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  Rewards     rewards[]
}

model rewards {
  id              Int          @id @default(autoincrement())
  product_id      Int
  points_required Float
  expires_at      DateTime
  Product         products     @relation(fields: [product_id], references: [id])
  UserRedeem      userRedeem[]
}

model userRedeem {
  id          Int      @id @default(autoincrement())
  user_id     Int
  reward_id   Int
  redeemed_at DateTime @default(now())
  User        user     @relation(fields: [user_id], references: [id])
  Rewards     rewards  @relation(fields: [reward_id], references: [id])
}

model refreshToken {
  id            Int      @id @default(autoincrement())
  user_id       Int
  refresh_token String
  expires_at    DateTime
  created_at    DateTime @default(now())
  User          user     @relation(fields: [user_id], references: [id])
}
